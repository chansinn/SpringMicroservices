package com.chansin.web.client;

import java.io.IOException;
import java.util.List;

import javax.ws.rs.PathParam;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.cloud.client.ServiceInstance;
import org.springframework.cloud.client.discovery.DiscoveryClient;
import org.springframework.cloud.client.loadbalancer.LoadBalancerClient;
import org.springframework.http.HttpEntity;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpMethod;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.client.RestClientException;
import org.springframework.web.client.RestTemplate;

@RestController
public class ClientReqController {
	
	/*
	 * @Autowired private DiscoveryClient discoveryClient;
	 */
	
	@Autowired
	private LoadBalancerClient loadBalancer;
	
	private ServiceInstance serviceInstance = loadBalancer.choose("ChansinWebProject");;

	@RequestMapping(value="/employees", method=RequestMethod.GET)
	public Object getEmployee() throws RestClientException, IOException {
		System.out.println("Inside getEmployee=========");
		//String baseUrl = "http://localhost:8080/getEmployeeDetails";
		
		
		/*
		 * List<ServiceInstance> instances =
		 * discoveryClient.getInstances("ChansinWebProject"); ServiceInstance instance =
		 * instances.get(0); String baseUrl = instance.getUri().toString();
		 * 
		 * baseUrl = baseUrl+"/getEmployeeDetails";
		 */
		 
		//serviceInstance = loadBalancer.choose("ChansinWebProject");
		
		System.out.println("Logging serverInstance from LB: >>>====== "+serviceInstance.getUri());
		
		String baseUrl = serviceInstance.getUri().toString();
		
		baseUrl = baseUrl+"/getEmployeeDetails";
		
		RestTemplate restTemplate = new RestTemplate();
		ResponseEntity<String> response=null;
		try{
		response=restTemplate.exchange(baseUrl,
				HttpMethod.GET, getHeaders(),String.class);
		}catch (Exception ex)
		{
			System.out.println(ex);
		}
		return response;
	}
	
	@RequestMapping(value="/employee/{id}", method=RequestMethod.GET)
	public Object getEmployeeById(@PathParam("id") int id) {
		
		
		
	}

	private HttpEntity<?> getHeaders() {
		HttpHeaders headers = new HttpHeaders();
		headers.set("Accept", MediaType.APPLICATION_JSON_VALUE);
		return new HttpEntity<>(headers);
	}
}
